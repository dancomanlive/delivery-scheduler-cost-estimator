<div class="max-w-7xl mx-auto mt-8 p-6">
  <div class="sm:flex sm:items-center">
    <div class="sm:flex-auto">
      <h1 class="text-2xl font-bold">Deliveries</h1>
    </div>
    <div class="mt-4 sm:mt-0 sm:ml-16 sm:flex-none">
      <%= link_to "New Delivery", new_delivery_path, class: "inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto" %>
    </div>
  </div>

  <div class="mt-8 bg-white p-4 rounded-lg shadow">
    <%= form_tag deliveries_path, method: :get, class: "space-y-4 sm:flex sm:space-y-0 sm:space-x-4" do %>
      <div class="flex-1">
        <%= text_field_tag :pickup_address, params[:pickup_address], placeholder: "Filter by pickup address", class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" %>
      </div>
      <div class="flex-1">
        <%= text_field_tag :driver_name, params[:driver_name], placeholder: "Filter by driver name", class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" %>
      </div>
      <%= submit_tag "Filter", class: "w-full sm:w-auto bg-gray-100 px-4 py-2 rounded-md hover:bg-gray-200" %>
    <% end %>

    <div class="mt-6 overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-300">
        <thead>
          <tr>
            <th class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Pickup Address</th>
            <th class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Delivery Address</th>
            <th class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Weight (kg)</th>
            <th class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Distance (km)</th>
            <th class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Cost ($)</th>
            <th class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Scheduled Time</th>
            <th class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Driver</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-200">
          <% @deliveries.each do |delivery| %>
            <tr>
              <td class="px-3 py-4 text-sm text-gray-500"><%= delivery.pickup_address %></td>
              <td class="px-3 py-4 text-sm text-gray-500"><%= delivery.delivery_address %></td>
              <td class="px-3 py-4 text-sm text-gray-500"><%= delivery.weight %></td>
              <td class="px-3 py-4 text-sm text-gray-500"><%= delivery.distance %></td>
              <td class="px-3 py-4 text-sm text-gray-500"><%= number_to_currency(delivery.cost) %></td>
              <td class="px-3 py-4 text-sm text-gray-500"><%= delivery.scheduled_time.strftime("%Y-%m-%d %H:%M") %></td>
              <td class="px-3 py-4 text-sm text-gray-500"><%= delivery.driver_name %></td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>

    <div class="mt-4">
      <%= paginate @deliveries %>
    </div>

    <div id="total-cost" class="mt-6 p-4 bg-gray-50 rounded-md">
      Loading total cost...
    </div>
  </div>
</div>

<%= javascript_tag do %>
  document.addEventListener('turbo:load', function() {
    const updateTotalCost = function() {
      const totalCostElement = document.getElementById('total-cost');
      totalCostElement.innerHTML = 'Loading total cost...';
      
      fetch('/deliveries/total_cost')
        .then(response => {
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          return response.json();
        })
        .then(data => {
          if (data.total_cost === null || data.total_cost === undefined) {
            throw new Error('Total cost data is missing');
          }
          totalCostElement.innerHTML = `Total Cost of All Deliveries: ${new Intl.NumberFormat('en-US', { 
            style: 'currency', 
            currency: 'USD' 
          }).format(data.total_cost)}`;
        })
        .catch(error => {
          console.error('Error fetching total cost:', error);
          totalCostElement.innerHTML = 'Error loading total cost. Please refresh the page.';
          totalCostElement.classList.add('text-red-600');
        });
    };

    // Update total cost on page load and after each turbo navigation
    updateTotalCost();
    document.addEventListener('turbo:render', updateTotalCost);
  });
<% end %>